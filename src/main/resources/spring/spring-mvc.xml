<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="ru.javarush.taskbook.**.web"/>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="ru.javarush.taskbook.util.mapper.HibernateAwareObjectMapper"/>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <!--- Fix AbstractMessageConverterMethodProcessor#142 -->
                    </list>
                </property>
            </bean>

            <bean class="ru.javarush.taskbook.web.rest.http.converter.json.DefaultJacksonHttpMessageConverter">
                <!-- True only for the blog article - a production system would set this to false to reduce
                     the number of bytes sent across the wire: -->
                <property name="prettyPrint" value="false"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:cacheSeconds="60"
          p:defaultEncoding="UTF-8">

        <property name="basenames">
            <list>
                <!--<value>${JAVARUSH_ROOT}/conf/locales/messages</value>-->
                <value>WEB-INF/locales/messages</value>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <property name="maxUploadSize" value="1048576" /> <!-- 1MB -->

        <!-- max size of file in memory (in bytes) -->
        <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </bean>
    <!-- Unfortunately we have to repeat an instance of this class here because the mvc:message-converters element above
         does not support <ref/> elements: -->
    <bean id="jacksonHttpMessageConverter" class="ru.javarush.taskbook.web.rest.http.converter.json.DefaultJacksonHttpMessageConverter">
        <property name="prettyPrint" value="false"/>
    </bean>

    <!-- Allow Exceptions to be handled in annotated methods if desired.  Otherwise fallback to the
         'restExceptionResolver' below: -->
    <!--<bean id="annotationMethodHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <property name="order" value="0"/>
    </bean>
    -->
    <bean id="restExceptionResolver" class="ru.javarush.taskbook.web.rest.exceptions.handlers.RestExceptionHandler">
        <property name="order" value="0"/>
        <property name="messageConverters">
            <list>
                <ref bean="jacksonHttpMessageConverter"/>
            </list>
        </property>
        <property name="errorResolver">
            <bean class="ru.javarush.taskbook.web.rest.exceptions.handlers.DefaultRestErrorResolver">
                <property name="defaultMoreInfoUrl" value="mailto:support@javarush.ru"/>
                <property name="exceptionMappingDefinitions">
                    <map>
                        <!-- 500 (catch all): -->
                        <entry key="Throwable" value="500, FBI is interested in your talents!"/>
                    </map>
                </property>
            </bean>

        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="jr.taskbook" />
        <property name="password" value="yi690dNqHD" />

        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>

    <bean id="mailServiceImpl" class="ru.javarush.taskbook.service.MailServiceImpl">
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <!--<mvc:resources mapping="/resources/images/users/**" location="file://${TASKBOOK}/resources/images/users/"/>-->
    <mvc:resources mapping="/**" location="/WEB-INF/build/taskbook-js/" />

</beans>